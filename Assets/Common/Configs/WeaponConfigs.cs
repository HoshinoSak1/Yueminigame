
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace cfg
{
public sealed partial class WeaponConfigs : Luban.BeanBase
{
    public WeaponConfigs(JSONNode _buf) 
    {
        { if(!_buf["id"].IsNumber) { throw new SerializationException(); }  Id = _buf["id"]; }
        { if(!_buf["name"].IsString) { throw new SerializationException(); }  Name = _buf["name"]; }
        { if(!_buf["reloadTime"].IsNumber) { throw new SerializationException(); }  ReloadTime = _buf["reloadTime"]; }
        { if(!_buf["fireRate"].IsNumber) { throw new SerializationException(); }  FireRate = _buf["fireRate"]; }
        { var __json0 = _buf["bulletId"]; if(!__json0.IsArray) { throw new SerializationException(); } BulletId = new System.Collections.Generic.List<int>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { int __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  BulletId.Add(__v0); }   }
        { var __json0 = _buf["upLimit"]; if(!__json0.IsArray) { throw new SerializationException(); } UpLimit = new System.Collections.Generic.List<int>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { int __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  UpLimit.Add(__v0); }   }
        { var __json0 = _buf["downLimit"]; if(!__json0.IsArray) { throw new SerializationException(); } DownLimit = new System.Collections.Generic.List<int>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { int __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  DownLimit.Add(__v0); }   }
        { var __json0 = _buf["bulletCnt"]; if(!__json0.IsArray) { throw new SerializationException(); } BulletCnt = new System.Collections.Generic.List<int>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { int __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  BulletCnt.Add(__v0); }   }
    }

    public static WeaponConfigs DeserializeWeaponConfigs(JSONNode _buf)
    {
        return new WeaponConfigs(_buf);
    }

    /// <summary>
    /// id
    /// </summary>
    public readonly int Id;
    /// <summary>
    /// name
    /// </summary>
    public readonly string Name;
    /// <summary>
    /// 换弹时间
    /// </summary>
    public readonly float ReloadTime;
    /// <summary>
    /// 发射间隔
    /// </summary>
    public readonly float FireRate;
    /// <summary>
    /// 子弹id
    /// </summary>
    public readonly System.Collections.Generic.List<int> BulletId;
    /// <summary>
    /// 范围上限
    /// </summary>
    public readonly System.Collections.Generic.List<int> UpLimit;
    /// <summary>
    /// 范围下限
    /// </summary>
    public readonly System.Collections.Generic.List<int> DownLimit;
    /// <summary>
    /// 范围内子弹数
    /// </summary>
    public readonly System.Collections.Generic.List<int> BulletCnt;
   
    public const int __ID__ = -356674667;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
        
        
        
        
        
        
        
        
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + Id + ","
        + "name:" + Name + ","
        + "reloadTime:" + ReloadTime + ","
        + "fireRate:" + FireRate + ","
        + "bulletId:" + Luban.StringUtil.CollectionToString(BulletId) + ","
        + "upLimit:" + Luban.StringUtil.CollectionToString(UpLimit) + ","
        + "downLimit:" + Luban.StringUtil.CollectionToString(DownLimit) + ","
        + "bulletCnt:" + Luban.StringUtil.CollectionToString(BulletCnt) + ","
        + "}";
    }
}

}
